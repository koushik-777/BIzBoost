
import { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Sparkles, Rocket, Target, Clock, User, LogOut, History } from "lucide-react";
import StartupForm from "@/components/StartupForm";
import StartupResult from "@/components/StartupResult";
import StartupHistory from "@/components/StartupHistory";
import AuthPage from "@/components/AuthPage";
import { useAuth } from "@/hooks/useAuth";

export interface StartupIdea {
  name: string;
  concept: string;
  monetization: string;
  toolsNeeded: string[];
  mvpPlan: string[];
  landingPageHtml?: string;
}

const Index = () => {
  const { user, loading, signOut } = useAuth();
  const [currentStep, setCurrentStep] = useState<'welcome' | 'form' | 'result' | 'history'>('welcome');
  const [startupIdea, setStartupIdea] = useState<StartupIdea | null>(null);

  const handleGetStarted = () => {
    setCurrentStep('form');
  };

  const handleFormSubmit = (idea: StartupIdea) => {
    setStartupIdea(idea);
    setCurrentStep('result');
  };

  const handleStartOver = () => {
    setCurrentStep('welcome');
    setStartupIdea(null);
  };

  const handleViewHistory = () => {
    setCurrentStep('history');
  };

  const handleViewIdea = (idea: StartupIdea) => {
    setStartupIdea(idea);
    setCurrentStep('result');
  };

  const handleAuthSuccess = () => {
    // User is now authenticated, component will re-render with user data
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-purple-600 via-blue-600 to-indigo-700 flex items-center justify-center">
        <div className="text-white text-xl">Loading...</div>
      </div>
    );
  }

  if (!user) {
    return <AuthPage onAuthSuccess={handleAuthSuccess} />;
  }

  if (currentStep === 'form') {
    return <StartupForm onSubmit={handleFormSubmit} onBack={() => setCurrentStep('welcome')} />;
  }

  if (currentStep === 'result' && startupIdea) {
    return <StartupResult idea={startupIdea} onStartOver={handleStartOver} />;
  }

  if (currentStep === 'history') {
    return <StartupHistory onViewIdea={handleViewIdea} onBack={() => setCurrentStep('welcome')} />;
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-600 via-blue-600 to-indigo-700">
      <div className="container mx-auto px-4 py-8">
        {/* Header with User Menu */}
        <div className="flex justify-between items-center mb-8">
          <div className="flex items-center gap-2">
            <Rocket className="h-8 w-8 text-yellow-300" />
            <h1 className="text-2xl font-bold text-white">BizBoost</h1>
          </div>
          
          <div className="flex items-center gap-4">
            <Button
              onClick={handleViewHistory}
              variant="outline"
              className="bg-white/10 border-white/20 text-white hover:bg-white/20"
            >
              <History className="h-4 w-4 mr-2" />
              My Ideas
            </Button>
            
            <div className="flex items-center gap-2 text-white">
              <User className="h-4 w-4" />
              <span className="hidden md:inline">{user.email}</span>
            </div>
            
            <Button
              onClick={signOut}
              variant="outline"
              size="sm"
              className="bg-white/10 border-white/20 text-white hover:bg-white/20"
            >
              <LogOut className="h-4 w-4" />
            </Button>
          </div>
        </div>

        {/* Welcome Section */}
        <div className="text-center mb-12">
          <h2 className="text-4xl md:text-6xl font-bold text-white mb-4">
            Welcome back!
          </h2>
          <p className="text-xl text-blue-100 mb-2">Micro-Startup Generator</p>
          <p className="text-blue-200 max-w-2xl mx-auto">
            Transform your interests and skills into a profitable micro-startup with AI-powered personalized business ideas
          </p>
        </div>

        {/* Features Grid */}
        <div className="grid md:grid-cols-3 gap-6 mb-12">
          <Card className="p-6 bg-white/10 backdrop-blur-sm border-white/20 text-white">
            <Target className="h-8 w-8 text-yellow-300 mb-4" />
            <h3 className="text-xl font-semibold mb-2">AI-Powered Ideas</h3>
            <p className="text-blue-100">Get startup concepts generated by Gemini AI, tailored to your specific profile</p>
          </Card>
          
          <Card className="p-6 bg-white/10 backdrop-blur-sm border-white/20 text-white">
            <Clock className="h-8 w-8 text-yellow-300 mb-4" />
            <h3 className="text-xl font-semibold mb-2">Save & Track</h3>
            <p className="text-blue-100">All your generated ideas are saved to your account for future reference</p>
          </Card>
          
          <Card className="p-6 bg-white/10 backdrop-blur-sm border-white/20 text-white">
            <Sparkles className="h-8 w-8 text-yellow-300 mb-4" />
            <h3 className="text-xl font-semibold mb-2">Ready to Launch</h3>
            <p className="text-blue-100">Get complete MVP plans and landing page code to start immediately</p>
          </Card>
        </div>

        {/* CTA Section */}
        <div className="text-center">
          <Card className="p-8 bg-white/15 backdrop-blur-sm border-white/20 max-w-2xl mx-auto">
            <h2 className="text-2xl font-bold text-white mb-4">
              Ready to Generate Your Next Startup?
            </h2>
            <p className="text-blue-100 mb-6">
              Our AI will analyze your profile and create a personalized business opportunity just for you.
            </p>
            <Button 
              onClick={handleGetStarted}
              size="lg"
              className="bg-gradient-to-r from-yellow-400 to-orange-500 hover:from-yellow-500 hover:to-orange-600 text-black font-semibold px-8 py-3 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
            >
              Generate New Startup Idea
              <Rocket className="ml-2 h-5 w-5" />
            </Button>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default Index;
